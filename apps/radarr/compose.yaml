services:
  radarr:
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    expose:
      - 7878
    image: ghcr.io/hotio/radarr:release
    restart: unless-stopped
    volumes:
      - /mnt:/mnt:rslave
      - ${DOCKER_DATA_DIR}/radarr/default/:/config
      - /usr/bin/rclone:/usr/bin/rclone
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_HOSTNAME}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr.middlewares=authelia@docker"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - homepage.group=Arrs
      - homepage.name=Radarr
      - homepage.icon=radarr
      - homepage.href=https://${RADARR_HOSTNAME?}
      - homepage.description=Movie manager.
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=e5fccf7f018d4dceb522a58be4cabf14
      - homepage.widget.fields=["wanted", "missing", "queued", "movies"] # optional
      - homepage.widget.enableQueue=true
    depends_on:
      decypharr:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:7878/ping | grep -q '\"status\": \"OK\"' || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 10s
    profiles:
      - radarr
      - all


#  radarr4k:
#    container_name: radarr4k
#    expose:
#      - 7878
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#    image: ghcr.io/hotio/radarr:release
#    restart: unless-stopped
#    volumes:
#      - /mnt:/mnt:rslave
#      - ${DOCKER_DATA_DIR}/radarr/4k:/config
#      - /usr/bin/rclone:/usr/bin/rclone
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.radarr4k.rule=Host(`${RADARR4K_HOSTNAME}`)"
#      - "traefik.http.routers.radarr4k.entrypoints=websecure"
#      - "traefik.http.routers.radarr4k.tls.certresolver=letsencrypt"
#      - "traefik.http.routers.radarr4k.middlewares=authelia@docker"
#      - "traefik.http.services.radarr4k.loadbalancer.server.port=7878"
##    depends_on:
# #     decypharr:
#  #      condition: service_healthy
#    healthcheck:
#      test: ["CMD-SHELL", "curl -s http://localhost:7878/ping | grep -q '\"status\": \"OK\"' || exit 1"]
#      interval: 1m
#      timeout: 10s
#      retries: 5
#      start_period: 10s
#    profiles:
#      - radarr
#      - all
#
#  radarranime:
#    container_name: radarranime
#    expose:
#      - 7878
#    image: ghcr.io/hotio/radarr:release
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#    restart: unless-stopped
#    volumes:
#      - /mnt:/mnt:rslave
#      - ${DOCKER_DATA_DIR}/radarr/anime:/config
#      - /usr/bin/rclone:/usr/bin/rclone
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.radarranime.rule=Host(`${RADARRANIME_HOSTNAME}`)"
#      - "traefik.http.routers.radarranime.entrypoints=websecure"
#      - "traefik.http.routers.radarranime.tls.certresolver=letsencrypt"
#      - "traefik.http.routers.radarranime.middlewares=authelia@docker"
#      - "traefik.http.services.radarranime.loadbalancer.server.port=7878"
##    depends_on:
##      decypharr:
##        condition: service_healthy
#    healthcheck:
#      test: ["CMD-SHELL", "curl -s http://localhost:7878/ping | grep -q '\"status\": \"OK\"' || exit 1"]
#      interval: 1m
#      timeout: 10s
#      retries: 5
#      start_period: 10s
#    profiles:
#      - radarr
#      - all
